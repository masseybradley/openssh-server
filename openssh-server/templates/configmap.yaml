apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "openssh-server.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "openssh-server.name" . }}
    helm.sh/chart: {{ include "openssh-server.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  sshd_config: |-
    {{ if .Values.sshd.port }}
    Port {{ .Values.sshd.port }}
    {{- end }}
    {{- if .Values.sshd.protocol }}
    Protocol {{ .Values.sshd.protocol }}
    {{- else }}
    Protocol 2
    {{- end }}
    {{- if .Values.sshd.addressFamily }}
    AddressFamily {{ .Values.sshd.addressFamily }}
    {{- else }}
    AddressFamily any
    {{- end }}
    {{- if .Values.sshd.ipv4.enabled }}
    {{- if .Values.sshd.ipv4.listenAddress }}
    ListenAddress {{ .Values.sshd.ipv4.listenAddress }}
    {{- else }}
    ListenAddress 0.0.0.0
    {{- end }}
    {{- end }}
    {{- if .Values.sshd.ipv6.enabled }}
    {{- if .Values.sshd.ipv6.listenAddress }}
    ListenAddress {{ .Values.sshd.ipv6.listenAddress }}
    {{- else }}
    ListenAddress ::
    {{- end }}
    {{- end }}
    # Ciphers and keying
    {{- if .Values.sshd.reKeyLimit }}
    ReKeyLimit {{ .Values.sshd.reKeyLimit }}
    {{- end }}

    # Logging
    {{- if .Values.sshd.sysLogFacility }}
    SysLogFacility {{ .Values.sshd.sysLogFacility }}
    {{- end }}

    {{- if .Values.sshd.logLevel }}
    LogLevel {{ .Values.sshd.logLevel }}
    {{- end }}

    # Authentication:
    {{ if .Values.sshd.authenticationMethods }}
    AuthenticationMethods {{ .Values.sshd.authenticationMethods }}
    {{- end }}
    {{- if .Values.sshd.loginGraceTime }}
    LoginGraceTime {{ .Values.sshd.loginGraceTime }}
    {{- end }}
    {{- if .Values.sshd.permitRootLogin }}
    PermitRootLogin {{ .Values.sshd.permitRootLogin }}
    {{- else }}
    PermitRootLogin prohibit-password
    {{- end }}

    {{- if .Values.sshd.strictModes }}
    StrictModes yes
    {{- else }}
    StrictModes no
    {{- end }}

    {{- if .Values.sshd.maxAuthTries }}
    MaxAuthTries {{ .Values.sshd.maxAuthTries }}
    {{- else }}
    MaxAuthTries 6
    {{- end }}
    {{- if .Values.sshd.maxSessions }}
    MaxSessions {{ .Values.sshd.maxSessions }}
    {{- end }}
    {{ if .Values.sshd.pubKeyAuthentication }}
    PubKeyAuthentication yes
    {{- else }}
    PubkeyAuthentication no
    {{- end }}
    # @TODO: add krl configmap mount
    {{- if .Values.sshd.revokeKeys }}
    RevokedKeys {{ .Values.sshd.revokedKeys }}
    {{- end }}
    {{- if .Values.sshd.authorizedKeysFile }}
    AuthorizedKeysFile {{ .Values.sshd.authorizedKeysFile }}
    # Expect .ssh/authorized_keys2 to be disregarded by default in future.
    {{- end }}
    # @TODO: mount authorized principals file
    {{ if .Values.sshd.authorizedPrincipalsFile }}
    AuthorizedPrincipalsFile {{ .Values.sshd.authorizedPrincipalsFile }}
    {{- end }}
    {{- if .Values.sshd.authorizedPrincipalsCommand }}
    AuthorizedPrincipalsCommand {{ .Values.sshd.authorizedPrincipalsFile }}
    {{- end }}
    {{- if .Values.sshd.authorizedPrincipalsCommandUser }}
    AuthorizedPrincipalsCommandUser {{ .Values.sshd.authorizedPrincipalsCommandUser }}
    {{- end }}
    {{ if .Values.sshd.authorizedKeysCommand }}
    AuthorizedKeysCommand {{ .Values.sshd.authorizedKeysCommand }}
    {{- else }}
    AuthorizedKeysCommand none
    {{- end }}
    {{- if .Values.sshd.authorizedKeysCommandUser }}
    AuthorizedKeysCommandUser {{ .Values.sshd.authorizedKeysCommandUser }}
    {{- end }}
    {{ if .Values.sshd.kexAlgorithms }}
    KexAlgorithms {{ .Values.sshd.kexAlgorithms }}
    {{- end }}
    {{- if .Values.sshd.ciphers }}
    Ciphers {{ .Values.sshd.ciphers }}
    {{- end }}
    {{- if .Values.sshd.messageAuthenticationCodes }}
    MACs {{ .Values.sshd.messageAuthenticationCodes }}
    {{- end }}

    {{- if .Values.sshd.hostbasedAcceptedKeyTypes }}
    HostbasedAccptedKeyTypes {{ .Values.sshd.hostbasedAcceptedKeyTypes }}
    {{- end }}
    # For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
    {{- if .Values.sshd.hostbasedAuthentication }}
    HostbasedAuthentication yes
    {{- end }}
    {{- if .Values.sshd.hostbasedNameFromPacketOnly }}
    HostbasedUsesNameFromPacketOnly yes
    {{- end }}
    # @TODO: allow mounting host certificates and keys
    # @TODO: configmap to generate certs
    {{- if .Values.sshd.hostCertificate }}
    HostCertificate {{ .Values.sshd.hostCertificate }}
    {{- end }}
    # @TODO: configmap and volume mount
    {{- if .Values.sshd.trustedUserCaKeys }}
    TrustedUserCAKeys {{ .Values.sshd.trustedUserCaKeys }}
    {{- end }}
    {{ if .Values.sshd.hostKeys }}
    {{- range .Values.sshd.hostKeys }}
    Hostkey {{ . }}
    {{- end }}
    {{- end }}
    # @TODO: allow setting SSH_AUTH_SOCK in the environ
    {{- if .Values.sshd.hostKeyAgent }}
    HostKeyAgent {{ .Values.sshd.hostKeyAgent }}
    {{- end }}
    {{- if .Values.sshd.hostKeyAlgorithms }}
    HostKeyAlgorithms {{ .Values.sshd.hostKeyAlgorithms }}
    {{- end }}
    # Change to yes if you don't trust ~/.ssh/known_hosts for
    # HostbasedAuthentication
    {{- if .Values.sshd.ignoreUserKnownHosts }}
    IgnoreUserKnownHosts yes
    {{- else }}
    IgnoreUserKnownHosts no
    {{- end }}
    # @TODO: allow mounting `~/.rhosts` and `~/.shosts`
    {{- if .Values.sshd.ignoreRhosts }}
    IgnoreRhosts yes
    {{- else }}
    IgnoreRhosts no
    {{- end }}

    # @TODO: make sure this can accept 1 or 2 parameters
    {{- if .Values.sshd.IPQoS }}
    IPQoS {{ .Values.sshd.IPQoS }}
    {{- end }}

    {{- if .Values.sshd.kdbInteractiveAuthentication }}
    KdbInteractiveAuthentication yes
    {{- else }}
    KdbInteractiveAuthentication no
    {{- end }}
    # To disable tunneled clear text passwords, change to no here!
    {{- if .Values.sshd.passwordAuthentication }}
    PasswordAuthentication yes
    {{- else }}
    PasswordAuthentication no
    {{- end }}
    {{- if .Values.sshd.permitEmptyPasswords }}
    PermitEmptyPasswords yes
    {{- end }}

    {{- if .Values.sshd.permitOpen }}
    PermitOpen {{ .Values.sshd.permitOpen }}
    {{- else }}
    PermitOpen any
    {{- end }}

    # Change to yes to enable challenge-response passwords (beware issues with
    # some PAM modules and threads)
    {{- if .Values.sshd.challengeResponseAuthentication }}
    ChallengeResponseAuthentication yes
    {{- else }}
    ChallengeResponseAuthentication no
    {{- end }}

    # Kerberos options
    {{- if .Values.sshd.kerberosAuthentication }}
    KerberosAuthentication yes
    {{- else }}
    KerberosAuthentication no
    {{- end }}
    {{- if .Values.sshd.kerberosGetAFSToken }}
    KerberosGetAFSToken yes
    {{- else }}
    KerberosGetAFSToken no
    {{- end }}
    {{- if .Values.sshd.kerberosOrLocalPassword }}
    KerberosOrLocalPasswd yes
    {{- else }}
    KerberosOrLocalPasswd no
    {{- end }}
    {{- if .Values.sshd.kerberosTicketCleanup }}
    KerberosTicketCleanup yes
    {{- else }}
    KerberosTicketCleanup no
    {{- end }}
    # GSSAPI options
    {{- if .Values.sshd.gssApiAuthentication }}
    GSSAPIAuthentication yes
    {{- end }}
    {{- if .Values.sshd.gssApiKeyExchange }}
    GSSAPIKeyExchange yes
    {{- end }}
    {{- if not .Values.sshd.gssApiCleanupCredentials }}
    GSSAPICleanupCredentials no
    {{- end }}
    {{- if not .Values.sshd.gssApiStrictAcceptorCheck }}
    GSSAPIStrictAcceptorCheck no
    {{- end }}
    {{- if .Values.sshd.gssApiStoreCredentialsOnRekey }}
    GSSAPIStoreCredentialsOnRekey yes
    {{- end }}

    # Set this to 'yes' to enable PAM authentication, account processing,
    # and session processing. If this is enabled, PAM authentication will
    # be allowed through the ChallengeResponseAuthentication and
    # PasswordAuthentication.  Depending on your PAM configuration,
    # PAM authentication via ChallengeResponseAuthentication may bypass
    # the setting of "PermitRootLogin without-password".
    # If you just want the PAM account and session checks to run without
    # PAM authentication, then enable this but set PasswordAuthentication
    # and ChallengeResponseAuthentication to 'no'.
    {{- if .Values.sshd.usePam }}
    UsePAM yes
    {{- else }}
    UsePAM no
    {{- end }}

    {{ if .Values.sshd.allowAgentForwarding }}
    AllowAgentForwarding yes
    {{- else }}
    AllowAgentForwarding no
    {{- end }}
    {{- if .Values.sshd.allowTcpForwarding }}
    AllowTcpForwarding {{ .Values.sshd.allowTcpForwarding }}
    {{- end }}
    {{- if .Values.sshd.allowStreamLocalForwarding }}
    AllowStreamLocalForwarding {{ .Values.sshd.streamLocalForwarding }}
    {{- end }}
    {{- if .Values.sshd.streamLocalBindMask }}
    StreamLocalBindMask {{ .Values.sshd.streamLocalBindMask }}
    {{- end }}
    {{- if .Values.sshd.streamLocalBindUnlink }}
    StreamLocalBindUnlink yes
    {{- end }}
    # @TODO: make sure the list is correctly formatted for openssh-server
    {{- if .Values.sshd.allowGroups }}
    {{- range .Values.sshd.allowGroups }}
    AllowGroups {{ . }}
    {{- end }}
    {{- end }}
    # @TODO: make sure this range is correct
    {{- if .Values.sshd.allowUsers }}
    {{- range .Values.sshd.allowUsers }}
    AllowUsers {{ . }}
    {{- end }}
    {{- end }}
    {{- if .Values.sshd.denyGroups }}
    {{- range .Values.sshd.denyGroups }}
    DenyGroups {{ . }}
    {{- end }}
    {{- end }}
    {{- if .Values.sshd.diableForwarding }}
    DisableForwarding yes
    {{- end }}
    {{- if .Values.sshd.exposeAuthInfo }}
    ExposeAuthInfo yes
    {{- end }}
    {{- if .Values.sshd.fingerprintHash }}
    FingerprintHash {{ .Values.sshd.fingerprintHash }}
    {{- end }}
    {{- if .Values.sshd.forceCommand }}
    ForceCommand {{ .Values.sshd.forceCommand }}
    {{- end }}
    {{- if .Values.sshd.gatewayPorts }}
    GatewayPorts yes
    {{- end }}
    {{- if .Values.sshd.disableForwarding }}
    DisableForwarding yes
    {{- end }}
    {{- if .Values.sshd.x11Forwarding }}
    X11Forwarding yes
    {{- end }}
    {{- if .Values.sshd.x11DisplayOffset }}
    X11DisplayOffset {{ .Values.sshd.x11DisplayOffset }}
    {{- end }}
    {{- if .Values.sshd.x11UseLocalHost }}
    X11UseLocalhost yes
    {{- else }}
    X11UseLocalhost no
    {{- end }}
    # @TODO: can build custom image with alt xauth
    {{- if .Values.sshd.xAuthLocation }}
    XAuthLocation {{ .Values.sshd.xAuthLocation }}
    {{- end }}

    {{- if not .Values.sshd.permitTTY }}
    PermitTTY no
    {{- end }}

    {{- if not .Values.sshd.permitUserRC }}
    PermitUserRC no
    {{- end }}

    # @TODO: mount motd configmap template to /etc/motd
    {{- if .Values.sshd.printMotd }}
    PrintMotd yes
    {{- else }}
    PrintMotd no
    {{- end }}
    {{- if .Values.sshd.printLastLog }}
    PrintLastLog yes
    {{- else }}
    PrintLastLog no
    {{- end }}
    {{- if .Values.sshd.tcpKeepAlive }}
    TCPKeepAlive yes
    {{- else }}
    TCPKeepAlive no
    {{- end }}
    {{- if .Values.sshd.useLogin }}
    UseLogin yes
    {{- end }}

    {{- if .Values.sshd.permitUserEnvironment }}
    PermitUserEnvironment yes
    {{- end }}

    {{- if .Values.sshd.compression }}
    Compression {{ .Values.sshd.compression }}
    {{- end }}
    {{- if .Values.sshd.debianBanner }}
    DebianBanner {{ .Values.sshd.debianBanner }}
    {{- end }}
    {{- if .Values.sshd.clientAliveCountMax }}
    ClientAliveCountMax {{ .Values.sshd.clientAliveCountMax }}
    {{- end }}
    {{- if .Values.sshd.clientAliveInterval }}
    ClientAliveInterval {{ .Values.sshd.clientAliveInterval }}
    {{- end }}
    {{- if .Values.sshd.useDNS }}
    UseDNS yes
    {{- else }}
    UseDNS no
    {{- end }}
    {{- if .Values.sshd.pidFile }}
    PidFile {{ .Values.sshd.pidFile }}
    {{- else }}
    PidFile /var/run/sshd.pid
    {{- end }}
    {{- if .Values.sshd.maxStartups }}
    MaxStartups {{ .Values.sshd.maxStartups }}
    {{- end }}

    # @TODO: handle "yes", "point-to-point", "ethernet" or "no" options
    {{- if .Values.sshd.permitTunnel }}
    PermitTunnel yes
    {{- else }}
    PermitTunnel no
    {{- end }}

    {{- if .Values.sshd.chrootDirectory }}
    ChrootDirectory {{ .Values.sshd.chrootDirectory }}
    {{- end }}
    {{- if .Values.sshd.versionAddendum }}
    VersionAddendum {{ .Values.sshd.versionAddendum }}
    {{- end }}

    # no default banner path
    {{- if .Values.sshd.banner }}
    Banner {{ .Values.sshd.banner }}
    {{- else }}
    Banner none
    {{- end }}

    # Allow client to pass locale environment variables
    {{- if .Values.sshd.acceptEnv.enabled }}
    {{- range .Values.sshd.acceptEnv.variables }}
    AcceptEnv {{ . }}
    {{- end }}
    {{- else }}
    AcceptEnv none
    {{- end }}

    # override default of no subsystems
    {{- if .Values.sshd.subsystems.enabled }}
    {{- range .Values.sshd.subsystems.systems }}
    Subsystem {{ .name }}    {{ .value }}
    {{- end }}
    {{- else }}
    Subsystem none
    {{- end }}

    # @TODO: update to include criteria User, Group, Host, LocalAddress, LocalPort and Address
    # Example of overriding settings on a per-user basis
    {{- if .Values.sshd.matchUser.enabled }}
    {{- range .Values.sshd.matchUser.users }}
    Match User {{ .name }}
    {{- range .settings }}
        {{ .name }} {{ .value }}
    {{- end }}
    {{- end }}
    {{- end }}
  authorized_keys: |-
    {{- if .Values.authorized_keys }}
    {{ range .Values.authorized_keys }}
    {{ . }}
    {{- end }}
    {{- end }}
